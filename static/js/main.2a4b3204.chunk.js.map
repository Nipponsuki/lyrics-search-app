{"version":3,"sources":["assets/spinner.gif","components/Layout/Navbar.js","context.js","components/Layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/Layout/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","Context","React","createContext","reducer","state","action","type","Object","objectSpread","track_list","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","message","body","catch","err","console","log","props","children","Component","Consumer","Spinner","src","spinner","alt","style","width","margin","display","Track","track","artist_name","track_name","album_name","Link","to","track_id","Tracks","undefined","Layout_Spinner","Fragment","map","item","tracks_Track","Search","trackTitle","onChange","e","defineProperty","target","name","findTrack","preventDefault","onSubmit","bind","placeholder","Index","tracks_Search","tracks_Tracks","Lyrics","lyrics","apiKey","match","params","id","_this$state","keys","lyrics_body","album_id","primary_genres","music_genre_list","music_genre","music_genre_name","explisit","dist_default","format","first_release_date","App","context_Provider","HashRouter","Layout_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a4b3204.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.2d7599b8.gif\";","import React from \"react\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark mb-5\">\n      <span className=\"navbar-brand mb-0 mx-auto h1\">LyricFinder</span>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SEARCH_TRACKS\":\n      return {\n        ...state,\n        track_list: action.payload,\n        heading: \"Search Results\"\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    track_list: [],\n    heading: \"Top 10 Tracks\",\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  componentDidMount() {\n    const apiKey = \"de84e659365c782d228b72c948f77e8d\";\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?page=1&page_size=10&country=jp&f_has_lyrics=1&apikey=${apiKey}`\n      )\n      .then(res => {\n        //console.log(res.data)\n        this.setState({ track_list: res.data.message.body.track_list });\n      })\n      .catch(err => console.log(err));\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React from \"react\";\nimport spinner from \"../../assets/spinner.gif\";\n\nconst Spinner = () => {\n  return (\n    <div>\n      <img\n        src={spinner}\n        alt=\"Loading..\"\n        style={{ width: \"200px\", margin: \"40px auto\", display: \"block\" }}\n      />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Track = props => {\n  const { track } = props;\n  return (\n    <div className=\"col-md-6\">\n      <div className=\"card mb-4 shadow-sm\">\n        <div className=\"card-body\">\n          <h5>{track.artist_name}</h5>\n          <p className=\"card-text\">\n            <strong>\n              {\" \"}\n              <i className=\"fas fa-play\" />Track\n            </strong>\n            : {track.track_name}\n            <br />\n            <strong>\n              {\" \"}\n              <i className=\"fas fa-compact-disc\" />Album\n            </strong>\n            : {track.album_name}\n          </p>\n          <Link\n            to={`lyrics/track/${track.track_id}`}\n            className=\"btn btn-dark btn-block\"\n          >\n            <i className=\"fas fa-chevron-right\" /> View Lyrics\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Track;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport Spinner from \"../Layout//Spinner\";\nimport Track from \"./Track\";\n\nclass Tracks extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { track_list, heading } = value;\n          console.log(value);\n          if (track_list === undefined || track_list.length === 0) {\n            return <Spinner />;\n          } else {\n            return (\n              <React.Fragment>\n                <h3 className=\"text-center mb-4\">{heading}</h3>\n                <div className=\"row\">\n                  {track_list.map(item => (\n                    <Track key={item.track.track_id} track={item.track} />\n                  ))}\n                </div>\n              </React.Fragment>\n            );\n          }\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Tracks;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Consumer } from \"../../context\";\n\nclass Search extends Component {\n  state = {\n    trackTitle: \"\"\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  findTrack = (dispatch, e) => {\n    e.preventDefault();\n    const apiKey = \"de84e659365c782d228b72c948f77e8d\";\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${\n          this.state.trackTitle\n        }&page_size=10&page=1&s_track_rating=desc&apikey=${apiKey}`\n      )\n      .then(res => {\n        dispatch({\n          type: \"SEARCH_TRACKS\",\n          payload: res.data.message.body.track_list\n        });\n        this.setState({ trackTitle: \"\" });\n      })\n      .catch(err => console.log(err));\n  };\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-4 p-4\">\n              <h1 className=\"display-4 text-center\">\n                <i className=\"fas fa-music\" /> Search For A Song\n              </h1>\n              <p className=\"lead text-center\">Get the lyrics for any song</p>\n              <form onSubmit={this.findTrack.bind(this, dispatch)}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    name=\"trackTitle\"\n                    value={this.state.trackTitle}\n                    placeholder=\"Song title...\"\n                    className=\"form-control form-control-lg\"\n                    onChange={this.onChange}\n                  />\n                </div>\n                <button\n                  className=\"btn btn-info btn-lg btn-block mb-5\"\n                  type=\"Submit\"\n                >\n                  Get Track Lyrics\n                </button>\n              </form>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default Search;\n","import React from \"react\";\nimport Tracks from \"../tracks/Tracks\";\nimport Search from \"../tracks/Search\";\n\nconst Index = () => {\n  return (\n    <React.Fragment>\n      <Search />\n      <Tracks />\n    </React.Fragment>\n  );\n};\n\nexport default Index;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"../Layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\n\nclass Lyrics extends Component {\n  state = {\n    track: {},\n    lyrics: {}\n  };\n\n  componentDidMount() {\n    const apiKey = \"de84e659365c782d228b72c948f77e8d\";\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${\n          this.props.match.params.id\n        }&apikey=${apiKey}`\n      )\n      .then(res => {\n        //console.log(res.data);\n        this.setState({ lyrics: res.data.message.body.lyrics });\n\n        return axios.get(\n          `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${\n            this.props.match.params.id\n          }&apikey=${apiKey}`\n        );\n      })\n      .then(res => {\n        this.setState({ track: res.data.message.body.track });\n      })\n      .catch(err => console.log(err));\n  }\n  render() {\n    const { track, lyrics } = this.state;\n    if (\n      track === undefined ||\n      lyrics === undefined ||\n      Object.keys(track).length === 0 ||\n      Object.keys(lyrics).length === 0\n    ) {\n      return <Spinner />;\n    } else {\n      return (\n        <React.Fragment>\n          <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">\n            Go Back\n          </Link>\n          <div className=\"card\">\n            <h5 className=\"card-header\">\n              {track.track_name} by{\" \"}\n              <span className=\"text-secondary\">{track.artist_name}</span>\n            </h5>\n            <div className=\"card-body\">\n              <p className=\"card-text\">{lyrics.lyrics_body}</p>\n            </div>\n          </div>\n          <ul className=\"lis-group mt-3\">\n            <li className=\"list-group-item\">\n              <strong>Album ID</strong>: {track.album_id}\n            </li>\n            <li className=\"list-group-item\">\n              <strong>Song Genre</strong>:{\" \"}\n              {\n                track.primary_genres.music_genre_list[0].music_genre\n                  .music_genre_name\n              }\n            </li>\n            <li className=\"list-group-item\">\n              <strong>Explicit Words</strong>:{\" \"}\n              {track.explisit === 0 ? \"No\" : \"Yes\"}\n            </li>\n            <li className=\"list-group-item\">\n              <strong>Release Date</strong>:{\" \"}\n              <Moment format=\"MM/DD/YYYY\">{track.first_release_date}</Moment>\n            </li>\n          </ul>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default Lyrics;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/Layout/Navbar\";\nimport Index from \"./components/Layout/Index\";\nimport { Provider } from \"./context\";\nimport Lyrics from \"./components/tracks/Lyrics\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <React.Fragment>\n            <Navbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Index} />\n                <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\n              </Switch>\n            </div>\n          </React.Fragment>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}